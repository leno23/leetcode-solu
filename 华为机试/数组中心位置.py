'''
题目描述
给你一个整数数组nums ,请计算数组的中心位置。 数组中心位置是数组的一个下标，其左侧所有元素相乘的积等于右侧所有元素相乘的积。 数组第一个元素的左侧积为1，最后一个元素的右侧积为1。 如果数组有多个中心位置，应该返回最靠近左边的那一个。 如果数组不存在中心位置，返回-1。


输入描述
输入只有一行，给出N个正整数用空格分格:nums = 2 5 3 6 5 6 
1 <= nums.length <= 1024 
1 <= nums[i] <= 10
输出描述
输出数组的中心位置。

输入
2 5 3 6 5 6
输出
3
'''
A=[int(x) for x in input().split()]
n=len(A)
l=[1]*(n+1)
r=[1]*(n+1)
# l[i] 0~i-1项的乘积
for i in range(n):
    l[i+1]=l[i]*A[i]
# r[i] i~n-1项的乘积
for i in range(n-1,-1,-1):
    r[i]=r[i+1]*A[i]

for i in range(n):
    if l[i]==r[i+1]:
        print(i)
        break
